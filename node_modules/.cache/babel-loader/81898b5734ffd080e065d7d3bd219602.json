{"ast":null,"code":"import _objectSpread from\"C:/Users/Adddmin/Documents/BADMINTON VN/BADMINTONVNWEB2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/Adddmin/Documents/BADMINTON VN/BADMINTONVNWEB2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Adddmin/Documents/BADMINTON VN/BADMINTONVNWEB2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Adddmin/Documents/BADMINTON VN/BADMINTONVNWEB2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Adddmin/Documents/BADMINTON VN/BADMINTONVNWEB2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{push}from\"connected-react-router\";import*as actions from\"../store/actions\";import{KeyCodeUtils,LanguageUtils}from\"../utils\";import userIcon from\"../../src/assets/images/user.svg\";import passIcon from\"../../src/assets/images/pass.svg\";import'./Login.scss';import{FormattedMessage}from'react-intl';import adminService from'../services/adminService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);function Login(props){var _this;_classCallCheck(this,Login);_this=_super.call(this,props);_this.initialState={username:'',password:'',loginError:''};_this.state=_objectSpread({},_this.initialState);_this.refresh=function(){_this.setState(_objectSpread({},_this.initialState));};_this.onUsernameChange=function(e){_this.setState({username:e.target.value});};_this.onPasswordChange=function(e){_this.setState({password:e.target.value});};_this.redirectToSystemPage=function(){var navigate=_this.props.navigate;var redirectPath='/system/user-manage';navigate(\"\".concat(redirectPath));};_this.processLogin=function(){var _this$state=_this.state,username=_this$state.username,password=_this$state.password;var _this$props=_this.props,adminLoginSuccess=_this$props.adminLoginSuccess,adminLoginFail=_this$props.adminLoginFail;var loginBody={username:'admin',password:'123456'};//sucess\nvar adminInfo={\"tlid\":\"0\",\"tlfullname\":\"Administrator\",\"custype\":\"A\",\"accessToken\":\"eyJhbGciOiJIU\"};adminLoginSuccess(adminInfo);_this.refresh();_this.redirectToSystemPage();try{adminService.login(loginBody);}catch(e){console.log('error login : ',e);}};_this.handlerKeyDown=function(event){var keyCode=event.which||event.keyCode;if(keyCode===KeyCodeUtils.ENTER){event.preventDefault();if(!_this.btnLogin.current||_this.btnLogin.current.disabled)return;_this.btnLogin.current.click();}};_this.btnLogin=/*#__PURE__*/React.createRef();return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){document.addEventListener('keydown',this.handlerKeyDown);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){document.removeEventListener('keydown',this.handlerKeyDown);// fix Warning: Can't perform a React state update on an unmounted component\nthis.setState=function(state,callback){return;};}},{key:\"render\",value:function render(){var _this$state2=this.state,username=_this$state2.username,password=_this$state2.password,loginError=_this$state2.loginError;var lang=this.props.lang;return/*#__PURE__*/_jsx(\"div\",{className:\"login-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form_login\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:/*#__PURE__*/_jsx(FormattedMessage,{id:\"login.login\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group icon-true\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"icon\",src:userIcon,alt:\"this\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:LanguageUtils.getMessageByKey(\"login.username\",lang),id:\"username\",name:\"username\",type:\"text\",className:\"form-control\",value:username,onChange:this.onUsernameChange})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"phone-input-container\",className:\"form-group icon-true\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"icon\",src:passIcon,alt:\"this\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:LanguageUtils.getMessageByKey(\"login.password\",lang),id:\"password\",name:\"password\",type:\"password\",className:\"form-control\",value:password,onChange:this.onPasswordChange})]}),loginError!==''&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:/*#__PURE__*/_jsx(\"span\",{className:\"login-error-message\",children:loginError})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group login\",children:/*#__PURE__*/_jsx(\"input\",{ref:this.btnLogin,id:\"btnLogin\",type:\"submit\",className:\"btn\",value:LanguageUtils.getMessageByKey(\"login.login\",lang),onClick:this.processLogin})})]})})});}}]);return Login;}(Component);var mapStateToProps=function mapStateToProps(state){return{lang:state.app.language};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{navigate:function navigate(path){return dispatch(push(path));},adminLoginSuccess:function adminLoginSuccess(adminInfo){return dispatch(actions.adminLoginSuccess(adminInfo));},adminLoginFail:function adminLoginFail(){return dispatch(actions.adminLoginFail());}};};export default connect(mapStateToProps,mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Adddmin/Documents/BADMINTON VN/BADMINTONVNWEB2/src/routes/Login.js"],"names":["React","Component","connect","push","actions","KeyCodeUtils","LanguageUtils","FormattedMessage","adminService","Login","props","initialState","username","password","loginError","state","refresh","setState","onUsernameChange","e","target","value","onPasswordChange","redirectToSystemPage","navigate","redirectPath","processLogin","adminLoginSuccess","adminLoginFail","loginBody","adminInfo","login","console","log","handlerKeyDown","event","keyCode","which","ENTER","preventDefault","btnLogin","current","disabled","click","createRef","document","addEventListener","removeEventListener","callback","lang","userIcon","getMessageByKey","passIcon","mapStateToProps","app","language","mapDispatchToProps","dispatch","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils, LanguageUtils } from \"../utils\";\r\n\r\nimport userIcon from '../../src/assets/images/user.svg';\r\nimport passIcon from '../../src/assets/images/pass.svg';\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport adminService from '../services/adminService';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.btnLogin = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n        username: '',\r\n        password: '',\r\n        loginError: ''\r\n    }\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    refresh = () => {\r\n        this.setState({\r\n            ...this.initialState\r\n        })\r\n    }\r\n\r\n    onUsernameChange = (e) => {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    onPasswordChange = (e) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n    redirectToSystemPage = () => {\r\n        const { navigate } = this.props;\r\n        const redirectPath = '/system/user-manage';\r\n        navigate(`${redirectPath}`);\r\n    }\r\n\r\n    processLogin = () => {\r\n        const { username, password } = this.state;\r\n\r\n        const { adminLoginSuccess, adminLoginFail } = this.props;\r\n        let loginBody = {\r\n            username: 'admin',\r\n            password: '123456'\r\n        }\r\n        //sucess\r\n        let adminInfo = {\r\n            \"tlid\": \"0\",\r\n            \"tlfullname\": \"Administrator\",\r\n            \"custype\": \"A\",\r\n            \"accessToken\": \"eyJhbGciOiJIU\"\r\n        }\r\n\r\n        adminLoginSuccess(adminInfo);\r\n        this.refresh();\r\n        this.redirectToSystemPage();\r\n        try {\r\n            adminService.login(loginBody)\r\n        } catch (e) {\r\n            console.log('error login : ', e)\r\n        }\r\n\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            if (!this.btnLogin.current || this.btnLogin.current.disabled) return;\r\n            this.btnLogin.current.click();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n        // fix Warning: Can't perform a React state update on an unmounted component\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { username, password, loginError } = this.state;\r\n        const { lang } = this.props;\r\n\r\n        return (\r\n            <div className=\"login-wrapper\">\r\n                <div className=\"login-container\">\r\n                    <div className=\"form_login\">\r\n                        <h2 className=\"title\">\r\n                            <FormattedMessage id=\"login.login\" />\r\n                        </h2>\r\n                        <div className=\"form-group icon-true\">\r\n                            <img className=\"icon\" src={userIcon} alt=\"this\" />\r\n                            <input\r\n                                placeholder={LanguageUtils.getMessageByKey(\"login.username\", lang)}\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={username}\r\n                                onChange={this.onUsernameChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div id=\"phone-input-container\" className=\"form-group icon-true\">\r\n                            <img className=\"icon\" src={passIcon} alt=\"this\" />\r\n                            <input\r\n                                placeholder={LanguageUtils.getMessageByKey(\"login.password\", lang)}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={this.onPasswordChange}\r\n                            />\r\n                        </div>\r\n\r\n                        {loginError !== '' && (\r\n                            <div className='login-error'>\r\n                                <span className='login-error-message'>{loginError}</span>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group login\">\r\n                            <input\r\n                                ref={this.btnLogin}\r\n                                id=\"btnLogin\"\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                value={LanguageUtils.getMessageByKey(\"login.login\", lang)}\r\n                                onClick={this.processLogin}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\r\n        adminLoginFail: () => dispatch(actions.adminLoginFail()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}