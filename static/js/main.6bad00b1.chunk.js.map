{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","utils/constant.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","components/CustomScrollbars.js","components/CustomToast.js","routes/Home.js","axios.js","containers/Auth/Login.js","services/userService.js","store/actions/userActions.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/UserManage.js","containers/System/ProductManage.js","containers/System/RegisterPackageGroupOrAcc.js","routes/System.js","components/ConfirmModal.js","store/actions/appActions.js","containers/HomePage/HomeHeader.js","containers/HomePage/Section/Specialty.js","containers/HomePage/Section/Tournaments.js","containers/HomePage/Section/Courses.js","containers/HomePage/Section/Shops.js","containers/HomePage/Section/About.js","containers/HomePage/Section/HomeFooter.js","containers/HomePage/HomePage.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","initialState","started","language","systemMenuPath","contentOfConfirmModal","isOpen","messageId","handleFunc","dataFunc","appReducer","state","action","type","isLoggedIn","userInfo","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","history","createBrowserHistory","basename","process","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","user","persistReducer","userReducer","app","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","dispatch","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","path","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","messages","value","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","CustomScrollbars","ref","React","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","props","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","className","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","this","disableVerticalScroll","disableHorizontalScroll","children","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","Component","CustomToastCloseButton","onClick","closeToast","Home","linkToRedirect","to","connect","instance","axios","create","baseURL","interceptors","response","use","data","Login","handleOnChangeUsername","event","setState","username","target","console","log","handleOnChangePassword","password","handleLogin","a","errMessage","userEmail","userPassword","post","email","errCode","message","userLoginSuccess","handleShowHidePassword","isShowPassword","placeholder","onChange","class","style","color","navigate","push","userInfor","MenuGroup","name","id","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","location","pathname","MenuGroupWithRouter","withRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","toggle","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","length","currentPath","i","checkActiveMenu","menus","outerLoop","group","j","menu","prevProps","prevState","map","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ComponentWithRef","withRef","adminMenu","Header","processLogout","UserManage","ProductManage","RegisterPackageGroupOrAcc","System","component","ConfirmModal","handlerKeyDown","which","keyCode","acceptBtnRef","disabled","click","onAcceptBtnClick","onClose","setContentOfConfirmModal","document","addEventListener","removeEventListener","Modal","centered","actions","HomeHeader","Fragment","Specialty","dots","infinite","speed","slidesToShow","slidesToScroll","Tournaments","Courses","Shops","About","width","height","src","title","frameborder","allow","referrerpolicy","allowfullscreen","HomeFooter","href","HomePage","App","handlePersistorState","getState","bootstrapped","onBeforeLift","Promise","resolve","then","catch","exact","toastClassName","bodyClassName","autoClose","hideProgressBar","pauseOnHover","pauseOnFocusLoss","closeOnClick","draggable","closeButton","Boolean","window","hostname","match","getFlattenedMessages","IntlProviderWrapper","locale","defaultLocale","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bad00b1.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n\r\n    //admin\r\n    //ADMIN_LOGIN_SUCCESS: 'ADMIN_LOGIN_SUCCESS',\r\n    //ADMIN_LOGIN_FAIL: 'ADMIN_LOGIN_FAIL',\r\n    //PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n})\r\n\r\nexport default actionTypes;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    systemMenuPath: '/system/user-manage',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE: \r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL: \r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n  \r\n    app: appReducer\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE: '/home',\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system'\r\n};\r\n\r\nexport const languages = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n\r\nexport const manageActions = {\r\n    ADD: \"ADD\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\"\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/home';\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n});\r\n\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        const { data } = response;\r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { handleLoginApi } from '../../services/userService';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isShowPassword: false,\r\n            errMessage: ''\r\n        }\r\n    }\r\n\r\n    handleOnChangeUsername = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    handleOnChangePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        this.setState({\r\n            errMessage: ''\r\n        })\r\n\r\n        try {\r\n            let data = await handleLoginApi(this.state.username, this.state.password);\r\n            if (data && data.errCode !== 0) {\r\n                this.setState({\r\n                    errMessage: data.message\r\n                })\r\n            }\r\n            if (data && data.errCode === 0) {\r\n                this.props.userLoginSuccess(data.user)\r\n                console.log('login succeeds')\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    this.setState({\r\n                        errMessage: error.response.data.message\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleShowHidePassword = () => {\r\n        this.setState({\r\n            isShowPassword: !this.state.isShowPassword\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='login-background'>\r\n                <div className='login-container'>\r\n                    <div className='login-content'>\r\n                        <div className='col-12 text-login'> Login </div>\r\n                        <div className='col-12 form-group'>\r\n                            <label> Username </label>\r\n                            <input type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter your username'\r\n                                value={this.state.username}\r\n                                onChange={(event) => this.handleOnChangeUsername(event)}\r\n                            />\r\n                        </div>\r\n                        <div className='col-12 form-group'>\r\n                            <label> Password </label>\r\n                            <div className='custom-input-password'>\r\n                                <input\r\n                                    className='form-control'\r\n                                    type={this.state.isShowPassword ? 'text' : 'password'}\r\n                                    placeholder='Enter your password'\r\n                                    onChange={(event) => { this.handleOnChangePassword(event) }}\r\n                                />\r\n                                <span\r\n                                    onClick={() => { this.handleShowHidePassword() }}\r\n                                ><i class={this.state.isShowPassword ? \"far fa-eye\" : \"far fa-eye-slash\"}></i></span>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12' style={{ color: 'red' }}>\r\n                            {this.state.errMessage}\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <button className='btn-login' onClick={() => { this.handleLogin() }}>Login</button>\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <span> Forgot your password? </span>\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <span className='text-center'> Or login with : </span>\r\n\r\n                        </div>\r\n                        <div className='col-12 social-login'>\r\n                            <i className=\"fab fa-google-plus-g\"></i>\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        userLoginSuccess: (userInfor) => dispatch(actions.userLoginSuccess(userInfor)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import axios from '../axios';\r\nconst handleLoginApi = (userEmail, userPassword) => {\r\n    return axios.post('api/login', { email: userEmail, password: userPassword });\r\n}\r\n\r\nexport { handleLoginApi }","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL,\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT,\r\n})","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const adminMenu = [\r\n    { //hệ thống\r\n        name: 'menu.system.header', menus: [\r\n            {\r\n                name: 'menu.system.system-administrator.header',\r\n                subMenus: [\r\n                    { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                    { name: 'menu.system.system-administrator.product-manage', link: '/system/product-manage' },\r\n                    { name: 'menu.system.system-administrator.register-package-group-or-account', link: '/system/register-package-group-or-account' },\r\n                ]\r\n            },\r\n            // { name: 'menu.system.system-parameter.header', link: '/system/system-parameter' },\r\n        ]\r\n    },\r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu } from './menuApp';\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        const { processLogout } = this.props;\r\n\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={adminMenu} />\r\n                </div>\r\n\r\n                {/* nút logout */}\r\n                <div className=\"btn btn-logout\" onClick={processLogout}>\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass UserManage extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">Manage users</div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass ProductManage extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" >Manage products</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass RegisterPackageGroupOrAcc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                register package group or account\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPackageGroupOrAcc);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport ProductManage from '../containers/System/ProductManage';\r\nimport RegisterPackageGroupOrAcc from '../containers/System/RegisterPackageGroupOrAcc';\r\n\r\nclass System extends Component {\r\n    render() {\r\n        const { systemMenuPath } = this.props;\r\n        return (\r\n            <div className=\"system-container\">\r\n                <div className=\"system-list\">\r\n                    <Switch>\r\n                        <Route path=\"/system/user-manage\" component={UserManage} />\r\n                        <Route path=\"/system/product-manage\" component={ProductManage} />\r\n                        <Route path=\"/system/register-package-group-or-account\" component={RegisterPackageGroupOrAcc} />\r\n                        <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'reactstrap';\r\n\r\nimport './ConfirmModal.scss';\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils } from \"../utils\";\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.acceptBtnRef = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n    };\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\r\n            this.acceptBtnRef.current.click();\r\n        }\r\n    }\r\n\r\n    onAcceptBtnClick = () => {\r\n        const { contentOfConfirmModal } = this.props;\r\n        if (contentOfConfirmModal.handleFunc) {\r\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.setContentOfConfirmModal({\r\n            isOpen: false,\r\n            messageId: \"\",\r\n            handleFunc: null,\r\n            dataFunc: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { contentOfConfirmModal } = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={contentOfConfirmModal.isOpen} className='confirm-modal' centered={true}>\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <FormattedMessage id={\"common.confirm\"} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-close\" onClick={this.onClose}>\r\n                            <i className=\"fal fa-times\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <div className=\"confirm-modal-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id={contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"} />\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"btn-container text-center\">\r\n                                    <button className=\"btn btn-add\" onClick={this.onClose} >\r\n                                        <FormattedMessage id=\"common.close\" />\r\n                                    </button>\r\n                                    <button ref={this.acceptBtnRef} className=\"btn btn-add\" onClick={this.onAcceptBtnClick}>\r\n                                        <FormattedMessage id={\"common.accept\"} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        contentOfConfirmModal: state.app.contentOfConfirmModal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setContentOfConfirmModal: (contentOfConfirmModal) => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeHeader.scss';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass HomeHeader extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <div className=\"home-header-container\">\r\n                        <div className=\"home-header-content\">\r\n\r\n                            <div className=\"left-content\">\r\n\r\n                                <i className=\"fas fa-bars\"></i>\r\n\r\n                                <div className=\"header-logo\"></div>\r\n                            </div>\r\n\r\n                            <div className=\"center-content\">\r\n\r\n                                <div className=\"child-content\">\r\n                                    <div><b>SÂN CẦU LÔNG</b></div>\r\n                                    <div> Tìm sân theo khu vực</div>\r\n                                </div>\r\n\r\n                                <div className=\"child-content\">\r\n                                    <div><b>SHOP ĐỒ THỂ THAO</b></div>\r\n                                    <div> Sản phẩm khuyến mãi</div>\r\n                                </div>\r\n\r\n                                <div className=\"child-content\">\r\n                                    <div><b>LỚP HỌC CẦU LÔNG</b></div>\r\n                                    <div> Tìm lớp học theo yêu cầu</div>\r\n                                </div>\r\n\r\n                                <div className=\"child-content\">\r\n                                    <div><b>GIẢI ĐÂU CẦU LÔNG</b></div>\r\n                                    <div> Đăng ký tham gia giải đấu</div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"right-content\">\r\n\r\n                                <i class=\"far fa-question-circle\"></i>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-header-banner\">\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Specialty.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nclass Specialty extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 5,\r\n            slidesToScroll: 2\r\n        };\r\n\r\n        return (\r\n            <div className=\"section-specialty\">\r\n\r\n                <div className=\"specialty-content\">\r\n                    <div className=\"court-header\">\r\n                        <span className=\"title-court\"> SÂN CẦU NỔI BẬT</span>\r\n                        <button className=\"button-court\"> Xem thêm </button>\r\n                    </div>\r\n\r\n                    <Slider {...settings}>\r\n                        <div className=\"img-customize1\">\r\n                            <div className=\"img-court1\" />\r\n                            <div className='position'> SÂN CẦU LÔNG TADA</div>\r\n                        </div>\r\n                        <div className=\"img-customize2\">\r\n                            <div className=\"img-court2\" />\r\n                            <div className='position'>SÂN NGUYỄN THƯỢNG HIỀN</div>\r\n                        </div>\r\n                        <div className=\"img-customize3\">\r\n                            <div className=\"img-court3\" />\r\n                            <div className='position'>SÂN CẦU LÔNG HOA SEN</div>\r\n                        </div>\r\n                        <div className=\"img-customize4\">\r\n                            <div className=\"img-court4\" />\r\n                            <div className='position'>SÂN CẦU LÔNG CHÂU DƯƠNG</div>\r\n                        </div>\r\n                        <div className=\"img-customize5\">\r\n                            <div className=\"img-court5\" />\r\n                            <div className='position'>SÂN CẦU LÔNG SƠN TẠ</div>\r\n                        </div>\r\n                        <div className=\"img-customize6\">\r\n                            <div className=\"img-court6\" />\r\n                            <div className='position'>SÂN CẦU LÔNG TRƯỜNG CHINH</div>\r\n                        </div>\r\n                    </Slider>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Tournaments.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nclass Tournaments extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 5,\r\n            slidesToScroll: 2\r\n        };\r\n\r\n        return (\r\n            <div className=\"section-tournament\">\r\n\r\n                <div className=\"tournament-content\">\r\n                    <div className=\"court-header\">\r\n                        <span className=\"title-court\"> GIẢI ĐẤU NỔI BẬT</span>\r\n                        <button className=\"button-court\"> Xem thêm </button>\r\n                    </div>\r\n\r\n                    <Slider {...settings}>\r\n                        <div className=\"img-customize1\">\r\n                            <div className=\"img-court1\" /> \r\n                            <div className='position'>ĐẠI HỌC CNTT</div>\r\n                        </div>\r\n                        <div className=\"img-customize2\">\r\n                            <div className=\"img-court2\" /> \r\n                            <div className='position'>GIẢI CẦU LÔNG ABZ</div>\r\n                        </div>\r\n                        <div className=\"img-customize3\">\r\n                            <div className=\"img-court3\" /> \r\n                            <div className='position'>GIẢI CẦU LÔNG HẢI HIỀN</div>\r\n                        </div>\r\n                        <div className=\"img-customize4\">\r\n                            <div className=\"img-court4\" /> \r\n                            <div className='position'>GIẢI YONEX-SUNRISE</div>\r\n                        </div>\r\n                        <div className=\"img-customize5\">\r\n                            <div className=\"img-court5\" /> \r\n                            <div className='position'>GIẢI PHONG TRÀO HCM</div>\r\n                        </div>\r\n                        <div className=\"img-customize6\">\r\n                            <div className=\"img-court6\" /> \r\n                            <div className='position'>GIẢI CẦU LÔNG TDH</div>\r\n                        </div>\r\n                    </Slider>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tournaments);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Courses.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nclass Courses extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 5,\r\n            slidesToScroll: 2\r\n        };\r\n\r\n        return (\r\n            <div className=\"section-course\">\r\n\r\n                <div className=\"course-content\">\r\n                    <div className=\"court-header\">\r\n                        <span className=\"title-court\"> LỚP HỌC NỔI BẬT</span>\r\n                        <button className=\"button-court\"> Xem thêm </button>\r\n                    </div>\r\n\r\n                    <Slider {...settings}>\r\n                        <div className=\"img-customize1\">\r\n                            <div className=\"img-court1\" /> \r\n                            <div className='position'>LỚP HỌC HỒNG NGA</div>\r\n                        </div>\r\n                        <div className=\"img-customize2\">\r\n                            <div className=\"img-court2\" /> \r\n                            <div className='position'> VIỆT BADMINTON</div>\r\n                        </div>\r\n                        <div className=\"img-customize3\">\r\n                            <div className=\"img-court3\" /> \r\n                            <div className='position'>LỚP HỌC LẠC AN</div>\r\n                        </div>\r\n                        <div className=\"img-customize4\">\r\n                            <div className=\"img-court4\" /> \r\n                            <div className='position'>LỚP HỌC NHTT</div>\r\n                        </div>\r\n                        <div className=\"img-customize5\">\r\n                            <div className=\"img-court5\" /> \r\n                            <div className='position'>LỚP HỌC HÈ - BÌNH THẠNH</div>\r\n                        </div>\r\n                        <div className=\"img-customize6\">\r\n                            <div className=\"img-court6\" /> \r\n                            <div className='position'>LỚP HỌC QUẬN 1</div>\r\n                        </div>\r\n                    </Slider>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Shops.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nclass Shops extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 5,\r\n            slidesToScroll: 2\r\n        };\r\n\r\n        return (\r\n            <div className=\"section-shop\">\r\n\r\n                <div className=\"shop-content\">\r\n                    <div className=\"court-header\">\r\n                        <span className=\"title-court\"> SHOP NỔI BẬT</span>\r\n                        <button className=\"button-court\"> Xem thêm </button>\r\n                    </div>\r\n\r\n                    <Slider {...settings}>\r\n                        <div className=\"img-customize1\">\r\n                            <div className=\"img-court1\" />\r\n                            <div className='position'>SHOP YONEX</div>\r\n                        </div>\r\n                        <div className=\"img-customize2\">\r\n                            <div className=\"img-court2\" />\r\n                            <div className='position'>SHOP LI NING</div>\r\n                        </div>\r\n                        <div className=\"img-customize3\">\r\n                            <div className=\"img-court3\" />\r\n                            <div className='position'>SHOP VICTOR</div>\r\n                        </div>\r\n                        <div className=\"img-customize4\">\r\n                            <div className=\"img-court4\" />\r\n                            <div className='position'>SHOP VNB</div>\r\n                        </div>\r\n                        <div className=\"img-customize5\">\r\n                            <div className=\"img-court5\" />\r\n                            <div className='position'>SHOP SÀI GÒN</div>\r\n                        </div>\r\n                        <div className=\"img-customize6\">\r\n                            <div className=\"img-court6\" />\r\n                            <div className='position'>SHOP BÌNH CHÁNH</div>\r\n                        </div>\r\n                    </Slider>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shops);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './About.scss';\r\n\r\n\r\nclass About extends Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"section-about\">\r\n                <div className='about-header'>\r\n                    TRUYỀN THÔNG NÓI VỀ BADMINTON VN\r\n                </div>\r\n                <div className='about-content'>\r\n                    <div className='content-left'>\r\n                        <iframe width=\"100%\" height=\"450px\"\r\n                            src=\"https://www.youtube.com/embed/2oru6xZlnmg\"\r\n                            title=\"Từ VĐV boxing chuyển sang VĐV cầu lông, Lê Đức Phát giành luôn vé di thi Olympic | VTV24\"\r\n                            frameborder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                            referrerpolicy=\"strict-origin-when-cross-origin\"\r\n                            allowfullscreen></iframe>\r\n                    </div>\r\n\r\n                    <div className='content-right'>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './HomeFooter.scss';\r\n\r\n\r\nclass HomeFooter extends Component {\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div className=\"section-HomeFooter\">\r\n               \r\n                <p>&copy; 2024 BADMINTON VN. More information, please visit our team!   \r\n                     <a target='_blank' href='https://www.youtube.com/@bwftv'> \r\n                      &#62; click here &#60;\r\n                   </a>\r\n                    </p>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeHeader from './HomeHeader';\r\nimport Specialty from './Section/Specialty';\r\nimport Tournaments from './Section/Tournaments';\r\nimport Courses from './Section/Courses';\r\nimport Shops from './Section/Shops';\r\nimport About from './Section/About';\r\nimport HomeFooter from './Section/HomeFooter';\r\n\r\nclass HomePage extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <HomeHeader />\r\n                <Specialty />\r\n                <Tournaments />\r\n                <Courses />\r\n                <Shops />\r\n                <About />\r\n                <HomeFooter />\r\n                <div style={{ height: '300px' }}></div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\n//import Login from '../routes/Login';\r\nimport Login from './Auth/Login';\r\nimport Header from './Header/Header';\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport ConfirmModal from '../components/ConfirmModal';\r\nimport HomePage from './HomePage/HomePage.js';\r\n\r\nimport CustomScrollbars from '../components/CustomScrollbars.js';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        <ConfirmModal />\r\n                        {this.props.isLoggedIn && <Header />}\r\n\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars style={{ height: '100vh', width: \"100%\" }}>\r\n                                <Switch>\r\n                                    <Route path={path.HOME} exact component={(Home)} />\r\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}